---
alwaysApply: true
---

# 블로그 포스트 생성 규칙

사용자가 특정 주제를 입력하면, 다음 단계를 따라 블로그 포스트를 생성하세요:

## 1. 주제 분석 및 정보 수집

- 사용자가 입력한 주제를 분석하여 핵심 키워드 추출
- **반드시 tavily-mcp를 사용하여 최신 정보를 검색**:
  - `mcp_tavily-mcp_tavily-search` 도구로 최신 정보 수집
  - Google, Stack Overflow, 공식 문서 등에서 관련 정보 수집
  - 최신 트렌드, 뉴스, 기술 업데이트 확인
  - 검색 결과를 바탕으로 신뢰할 수 있는 정보만 사용

## 2. 블로그 포스트 구조

pages 폴더의 기존 포스트 형식을 따라 다음 구조로 작성:

### Frontmatter (필수)

```yaml
---
title: '포스트 제목'
date: YYYY-MM-DD
tags: ['태그1', '태그2', '태그3']
category: '카테고리'
description: '포스트 요약 설명'
---
```

### 본문 구조

- **서론**: 주제 소개 및 목차
- **본론**: 상세 내용 (코드 예제, 설명, 최신 정보 포함)
- **결론**: 요약 및 마무리
- **참고 자료**: 링크 및 추가 정보

## 3. 작성 원칙

- **최신성**: tavily-mcp를 통한 웹 검색으로 최신 정보를 반드시 포함
- **실용성**: 실제 사용 가능한 코드 예제 제공
- **가독성**: 마크다운 형식으로 깔끔하게 작성
- **교육적**: 초보자도 이해할 수 있도록 설명
- **SEO 친화적**: 적절한 제목과 태그 사용

## 4. 기술 스택 고려

- 프론트엔드: HTML, CSS, JavaScript
- 백엔드: Node.js, 데이터베이스
- 최신 트렌드: React, Vue, TypeScript 등

## 5. 파일 생성

- 파일명: 주제에 맞는 영어 파일명 (예: `javascript-async-guide.md`)
- 저장 위치: `pages/` 폴더
- 날짜: 오늘 날짜 사용

## 사용 예시

```
주제: "React 19 새로운 기능"
→ pages/react-19-new-features.md 생성
```

항상 tavily-mcp를 통해 최신 정보를 수집하여 실질적인 도움이 되는 포스트를 작성하세요.

## 필수 사항

블로그 글을 작성하고 나서 항상 `node .github/scripts/generate-posts.js`를 실행하여 posts.json 파일을 생성하세요.
